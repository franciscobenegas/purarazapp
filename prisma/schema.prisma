// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
 // output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
 relationMode = "prisma"
}


enum Rol {
  PEON
  ADMIN
}


model Usuario{
  id String    @id @default(uuid())
  email String @unique
  username String @unique
  password String
  establesimiento String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  rol Rol @default(ADMIN)
}

model Estancia{
  id String    @id @default(uuid())
  nombre  String
  departamento String
  distrito String
  localidad String
  ruc String
  telefono String
  usuario String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime   @updatedAt

  propietario Propietario[]
  establesimiento String

   @@index([establesimiento])
   @@index([departamento])
}

model Propietario{
  id String    @id @default(uuid())
  nombre String
  email String
  telefono String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime   @updatedAt
  usuario String
  estanciaId String
  estancia Estancia? @relation(fields: [estanciaId], references: [id], onDelete: Cascade )
  establesimiento String

  @@index([estanciaId])
  @@index([establesimiento])
}


model TipoRaza{
  id String    @id @default(uuid())
  nombre String
  establesimiento String
  usuario String
  createdAt   DateTime    @default(now())
  updatedAt   DateTime   @updatedAt

    @@index([establesimiento])
}


